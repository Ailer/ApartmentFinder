//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM-Beziehungsmetadaten

[assembly: EdmRelationshipAttribute("ApartmentDBModel", "FK_Apartment_Rating", "Rating", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibApartmentFinder.Data.EntityFramework.RatingEntity), "Apartment", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibApartmentFinder.Data.EntityFramework.ApartmentEntity), true)]
[assembly: EdmRelationshipAttribute("ApartmentDBModel", "FK_Apartment_Renter", "Renter", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibApartmentFinder.Data.EntityFramework.RenterEntity), "Apartment", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibApartmentFinder.Data.EntityFramework.ApartmentEntity), true)]
[assembly: EdmRelationshipAttribute("ApartmentDBModel", "FK_Apartment_State", "State", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibApartmentFinder.Data.EntityFramework.StateEntity), "Apartment", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibApartmentFinder.Data.EntityFramework.ApartmentEntity), true)]
[assembly: EdmRelationshipAttribute("ApartmentDBModel", "FK_Apartment_ApartmentKind", "ApartmentKind", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibApartmentFinder.Data.EntityFramework.ApartmentKindEntity), "ApartmentEntity", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibApartmentFinder.Data.EntityFramework.ApartmentEntity), true)]

#endregion

namespace LibApartmentFinder.Data.EntityFramework
{
    #region Kontexte
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    public partial class ApartmentDBDataContext : ObjectContext
    {
        #region Konstruktoren
    
        /// <summary>
        /// Initialisiert ein neues ApartmentDBDataContext-Objekt mithilfe der in Abschnitt 'ApartmentDBDataContext' der Anwendungskonfigurationsdatei gefundenen Verbindungszeichenfolge.
        /// </summary>
        public ApartmentDBDataContext() : base("name=ApartmentDBDataContext", "ApartmentDBDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues ApartmentDBDataContext-Objekt.
        /// </summary>
        public ApartmentDBDataContext(string connectionString) : base(connectionString, "ApartmentDBDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues ApartmentDBDataContext-Objekt.
        /// </summary>
        public ApartmentDBDataContext(EntityConnection connection) : base(connection, "ApartmentDBDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partielle Methoden
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet-Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<ApartmentEntity> EF_Apartment
        {
            get
            {
                if ((_EF_Apartment == null))
                {
                    _EF_Apartment = base.CreateObjectSet<ApartmentEntity>("EF_Apartment");
                }
                return _EF_Apartment;
            }
        }
        private ObjectSet<ApartmentEntity> _EF_Apartment;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<RatingEntity> EF_Rating
        {
            get
            {
                if ((_EF_Rating == null))
                {
                    _EF_Rating = base.CreateObjectSet<RatingEntity>("EF_Rating");
                }
                return _EF_Rating;
            }
        }
        private ObjectSet<RatingEntity> _EF_Rating;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<RenterEntity> EF_Renter
        {
            get
            {
                if ((_EF_Renter == null))
                {
                    _EF_Renter = base.CreateObjectSet<RenterEntity>("EF_Renter");
                }
                return _EF_Renter;
            }
        }
        private ObjectSet<RenterEntity> _EF_Renter;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<StateEntity> EF_State
        {
            get
            {
                if ((_EF_State == null))
                {
                    _EF_State = base.CreateObjectSet<StateEntity>("EF_State");
                }
                return _EF_State;
            }
        }
        private ObjectSet<StateEntity> _EF_State;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<ApartmentKindEntity> EF_ApartmentKind
        {
            get
            {
                if ((_EF_ApartmentKind == null))
                {
                    _EF_ApartmentKind = base.CreateObjectSet<ApartmentKindEntity>("EF_ApartmentKind");
                }
                return _EF_ApartmentKind;
            }
        }
        private ObjectSet<ApartmentKindEntity> _EF_ApartmentKind;

        #endregion

        #region AddTo-Methoden
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'EF_Apartment'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToEF_Apartment(ApartmentEntity apartmentEntity)
        {
            base.AddObject("EF_Apartment", apartmentEntity);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'EF_Rating'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToEF_Rating(RatingEntity ratingEntity)
        {
            base.AddObject("EF_Rating", ratingEntity);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'EF_Renter'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToEF_Renter(RenterEntity renterEntity)
        {
            base.AddObject("EF_Renter", renterEntity);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'EF_State'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToEF_State(StateEntity stateEntity)
        {
            base.AddObject("EF_State", stateEntity);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'EF_ApartmentKind'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToEF_ApartmentKind(ApartmentKindEntity apartmentKindEntity)
        {
            base.AddObject("EF_ApartmentKind", apartmentKindEntity);
        }

        #endregion

    }

    #endregion

    #region Entitäten
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ApartmentDBModel", Name="ApartmentEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApartmentEntity : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues ApartmentEntity-Objekt.
        /// </summary>
        /// <param name="apartmentID">Anfangswert der Eigenschaft ApartmentID.</param>
        /// <param name="pLZ">Anfangswert der Eigenschaft PLZ.</param>
        /// <param name="place">Anfangswert der Eigenschaft Place.</param>
        /// <param name="street">Anfangswert der Eigenschaft Street.</param>
        /// <param name="stateID">Anfangswert der Eigenschaft StateID.</param>
        /// <param name="apartmentKindID">Anfangswert der Eigenschaft ApartmentKindID.</param>
        /// <param name="renterID">Anfangswert der Eigenschaft RenterID.</param>
        /// <param name="streetnumber">Anfangswert der Eigenschaft Streetnumber.</param>
        public static ApartmentEntity CreateApartmentEntity(global::System.Int32 apartmentID, global::System.String pLZ, global::System.String place, global::System.String street, global::System.Int32 stateID, global::System.Int32 apartmentKindID, global::System.Int32 renterID, global::System.String streetnumber)
        {
            ApartmentEntity apartmentEntity = new ApartmentEntity();
            apartmentEntity.ApartmentID = apartmentID;
            apartmentEntity.PLZ = pLZ;
            apartmentEntity.Place = place;
            apartmentEntity.Street = street;
            apartmentEntity.StateID = stateID;
            apartmentEntity.ApartmentKindID = apartmentKindID;
            apartmentEntity.RenterID = renterID;
            apartmentEntity.Streetnumber = streetnumber;
            return apartmentEntity;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApartmentID
        {
            get
            {
                return _ApartmentID;
            }
            set
            {
                if (_ApartmentID != value)
                {
                    OnApartmentIDChanging(value);
                    ReportPropertyChanging("ApartmentID");
                    _ApartmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApartmentID");
                    OnApartmentIDChanged();
                }
            }
        }
        private global::System.Int32 _ApartmentID;
        partial void OnApartmentIDChanging(global::System.Int32 value);
        partial void OnApartmentIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PLZ
        {
            get
            {
                return _PLZ;
            }
            set
            {
                OnPLZChanging(value);
                ReportPropertyChanging("PLZ");
                _PLZ = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PLZ");
                OnPLZChanged();
            }
        }
        private global::System.String _PLZ;
        partial void OnPLZChanging(global::System.String value);
        partial void OnPLZChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Place
        {
            get
            {
                return _Place;
            }
            set
            {
                OnPlaceChanging(value);
                ReportPropertyChanging("Place");
                _Place = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Place");
                OnPlaceChanged();
            }
        }
        private global::System.String _Place;
        partial void OnPlaceChanging(global::System.String value);
        partial void OnPlaceChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Nullable<global::System.Byte> _Size;
        partial void OnSizeChanging(Nullable<global::System.Byte> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Startdate
        {
            get
            {
                return _Startdate;
            }
            set
            {
                OnStartdateChanging(value);
                ReportPropertyChanging("Startdate");
                _Startdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Startdate");
                OnStartdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Startdate;
        partial void OnStartdateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartdateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Enddate
        {
            get
            {
                return _Enddate;
            }
            set
            {
                OnEnddateChanging(value);
                ReportPropertyChanging("Enddate");
                _Enddate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enddate");
                OnEnddateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Enddate;
        partial void OnEnddateChanging(Nullable<global::System.DateTime> value);
        partial void OnEnddateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApartmentKindID
        {
            get
            {
                return _ApartmentKindID;
            }
            set
            {
                OnApartmentKindIDChanging(value);
                ReportPropertyChanging("ApartmentKindID");
                _ApartmentKindID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApartmentKindID");
                OnApartmentKindIDChanged();
            }
        }
        private global::System.Int32 _ApartmentKindID;
        partial void OnApartmentKindIDChanging(global::System.Int32 value);
        partial void OnApartmentKindIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RenterID
        {
            get
            {
                return _RenterID;
            }
            set
            {
                OnRenterIDChanging(value);
                ReportPropertyChanging("RenterID");
                _RenterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RenterID");
                OnRenterIDChanged();
            }
        }
        private global::System.Int32 _RenterID;
        partial void OnRenterIDChanging(global::System.Int32 value);
        partial void OnRenterIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RatingID
        {
            get
            {
                return _RatingID;
            }
            set
            {
                OnRatingIDChanging(value);
                ReportPropertyChanging("RatingID");
                _RatingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RatingID");
                OnRatingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RatingID;
        partial void OnRatingIDChanging(Nullable<global::System.Int32> value);
        partial void OnRatingIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Streetnumber
        {
            get
            {
                return _Streetnumber;
            }
            set
            {
                OnStreetnumberChanging(value);
                ReportPropertyChanging("Streetnumber");
                _Streetnumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Streetnumber");
                OnStreetnumberChanged();
            }
        }
        private global::System.String _Streetnumber;
        partial void OnStreetnumberChanging(global::System.String value);
        partial void OnStreetnumberChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApartmentDBModel", "FK_Apartment_Rating", "Rating")]
        public RatingEntity Rating
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RatingEntity>("ApartmentDBModel.FK_Apartment_Rating", "Rating").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RatingEntity>("ApartmentDBModel.FK_Apartment_Rating", "Rating").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RatingEntity> RatingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RatingEntity>("ApartmentDBModel.FK_Apartment_Rating", "Rating");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RatingEntity>("ApartmentDBModel.FK_Apartment_Rating", "Rating", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApartmentDBModel", "FK_Apartment_Renter", "Renter")]
        public RenterEntity Renter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RenterEntity>("ApartmentDBModel.FK_Apartment_Renter", "Renter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RenterEntity>("ApartmentDBModel.FK_Apartment_Renter", "Renter").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RenterEntity> RenterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RenterEntity>("ApartmentDBModel.FK_Apartment_Renter", "Renter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RenterEntity>("ApartmentDBModel.FK_Apartment_Renter", "Renter", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApartmentDBModel", "FK_Apartment_State", "State")]
        public StateEntity State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateEntity>("ApartmentDBModel.FK_Apartment_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateEntity>("ApartmentDBModel.FK_Apartment_State", "State").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateEntity> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateEntity>("ApartmentDBModel.FK_Apartment_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateEntity>("ApartmentDBModel.FK_Apartment_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApartmentDBModel", "FK_Apartment_ApartmentKind", "ApartmentKind")]
        public ApartmentKindEntity ApartmentKind
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApartmentKindEntity>("ApartmentDBModel.FK_Apartment_ApartmentKind", "ApartmentKind").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApartmentKindEntity>("ApartmentDBModel.FK_Apartment_ApartmentKind", "ApartmentKind").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApartmentKindEntity> ApartmentKindReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApartmentKindEntity>("ApartmentDBModel.FK_Apartment_ApartmentKind", "ApartmentKind");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApartmentKindEntity>("ApartmentDBModel.FK_Apartment_ApartmentKind", "ApartmentKind", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ApartmentDBModel", Name="ApartmentKindEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApartmentKindEntity : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues ApartmentKindEntity-Objekt.
        /// </summary>
        /// <param name="apartmentKindID">Anfangswert der Eigenschaft ApartmentKindID.</param>
        /// <param name="description">Anfangswert der Eigenschaft Description.</param>
        public static ApartmentKindEntity CreateApartmentKindEntity(global::System.Int32 apartmentKindID, global::System.String description)
        {
            ApartmentKindEntity apartmentKindEntity = new ApartmentKindEntity();
            apartmentKindEntity.ApartmentKindID = apartmentKindID;
            apartmentKindEntity.Description = description;
            return apartmentKindEntity;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApartmentKindID
        {
            get
            {
                return _ApartmentKindID;
            }
            set
            {
                if (_ApartmentKindID != value)
                {
                    OnApartmentKindIDChanging(value);
                    ReportPropertyChanging("ApartmentKindID");
                    _ApartmentKindID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApartmentKindID");
                    OnApartmentKindIDChanged();
                }
            }
        }
        private global::System.Int32 _ApartmentKindID;
        partial void OnApartmentKindIDChanging(global::System.Int32 value);
        partial void OnApartmentKindIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApartmentDBModel", "FK_Apartment_ApartmentKind", "ApartmentEntity")]
        public EntityCollection<ApartmentEntity> Apartment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApartmentEntity>("ApartmentDBModel.FK_Apartment_ApartmentKind", "ApartmentEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApartmentEntity>("ApartmentDBModel.FK_Apartment_ApartmentKind", "ApartmentEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ApartmentDBModel", Name="RatingEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RatingEntity : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues RatingEntity-Objekt.
        /// </summary>
        /// <param name="ratingID">Anfangswert der Eigenschaft RatingID.</param>
        /// <param name="description">Anfangswert der Eigenschaft Description.</param>
        public static RatingEntity CreateRatingEntity(global::System.Int32 ratingID, global::System.String description)
        {
            RatingEntity ratingEntity = new RatingEntity();
            ratingEntity.RatingID = ratingID;
            ratingEntity.Description = description;
            return ratingEntity;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RatingID
        {
            get
            {
                return _RatingID;
            }
            set
            {
                if (_RatingID != value)
                {
                    OnRatingIDChanging(value);
                    ReportPropertyChanging("RatingID");
                    _RatingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RatingID");
                    OnRatingIDChanged();
                }
            }
        }
        private global::System.Int32 _RatingID;
        partial void OnRatingIDChanging(global::System.Int32 value);
        partial void OnRatingIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApartmentDBModel", "FK_Apartment_Rating", "Apartment")]
        public EntityCollection<ApartmentEntity> Apartments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApartmentEntity>("ApartmentDBModel.FK_Apartment_Rating", "Apartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApartmentEntity>("ApartmentDBModel.FK_Apartment_Rating", "Apartment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ApartmentDBModel", Name="RenterEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RenterEntity : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues RenterEntity-Objekt.
        /// </summary>
        /// <param name="renterID">Anfangswert der Eigenschaft RenterID.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        public static RenterEntity CreateRenterEntity(global::System.Int32 renterID, global::System.String name)
        {
            RenterEntity renterEntity = new RenterEntity();
            renterEntity.RenterID = renterID;
            renterEntity.Name = name;
            return renterEntity;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RenterID
        {
            get
            {
                return _RenterID;
            }
            set
            {
                if (_RenterID != value)
                {
                    OnRenterIDChanging(value);
                    ReportPropertyChanging("RenterID");
                    _RenterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RenterID");
                    OnRenterIDChanged();
                }
            }
        }
        private global::System.Int32 _RenterID;
        partial void OnRenterIDChanging(global::System.Int32 value);
        partial void OnRenterIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobilenumber
        {
            get
            {
                return _Mobilenumber;
            }
            set
            {
                OnMobilenumberChanging(value);
                ReportPropertyChanging("Mobilenumber");
                _Mobilenumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobilenumber");
                OnMobilenumberChanged();
            }
        }
        private global::System.String _Mobilenumber;
        partial void OnMobilenumberChanging(global::System.String value);
        partial void OnMobilenumberChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephonenumber
        {
            get
            {
                return _Telephonenumber;
            }
            set
            {
                OnTelephonenumberChanging(value);
                ReportPropertyChanging("Telephonenumber");
                _Telephonenumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephonenumber");
                OnTelephonenumberChanged();
            }
        }
        private global::System.String _Telephonenumber;
        partial void OnTelephonenumberChanging(global::System.String value);
        partial void OnTelephonenumberChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApartmentDBModel", "FK_Apartment_Renter", "Apartment")]
        public EntityCollection<ApartmentEntity> Apartments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApartmentEntity>("ApartmentDBModel.FK_Apartment_Renter", "Apartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApartmentEntity>("ApartmentDBModel.FK_Apartment_Renter", "Apartment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ApartmentDBModel", Name="StateEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StateEntity : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues StateEntity-Objekt.
        /// </summary>
        /// <param name="stateID">Anfangswert der Eigenschaft StateID.</param>
        /// <param name="description">Anfangswert der Eigenschaft Description.</param>
        public static StateEntity CreateStateEntity(global::System.Int32 stateID, global::System.String description)
        {
            StateEntity stateEntity = new StateEntity();
            stateEntity.StateID = stateID;
            stateEntity.Description = description;
            return stateEntity;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                if (_StateID != value)
                {
                    OnStateIDChanging(value);
                    ReportPropertyChanging("StateID");
                    _StateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateID");
                    OnStateIDChanged();
                }
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApartmentDBModel", "FK_Apartment_State", "Apartment")]
        public EntityCollection<ApartmentEntity> Apartments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApartmentEntity>("ApartmentDBModel.FK_Apartment_State", "Apartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApartmentEntity>("ApartmentDBModel.FK_Apartment_State", "Apartment", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
